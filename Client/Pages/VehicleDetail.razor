@page "/VehiculeDetail/{VehicleId:int}"
@using Shared.ApiModels
@using Shared.FormModels
@using Shared
@inject HttpClient HttpClient

@if (Vehicle == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <h3>Informations du véhicule</h3>
            <table class="table">
                <tbody>
                    <tr>
                        <td>Modèle: @Vehicle.CarModel.Name</td>
                    </tr>
                    <tr>
                        <td>Marque: @Vehicle.CarModel.Brand.Name</td>
                    </tr>
                    <tr>
                        <td>Année de création: @Vehicle.BuildYear</td>
                    </tr>
                    <tr>
                        <td>Kilométrage: @Vehicle.KmNumber</td>
                    </tr>
                    <tr>
                        <td>Énergie: @Vehicle.EnergySource</td>
                    </tr>
                </tbody>
            </table>
            <!-- Ajout du bouton Modifier -->
            <button class="btn btn-primary" @onclick="ModifierClicked">Modifier</button>
        </div>
        <div class="col-md-6">
	        <h3>Détails des entretiens</h3>
	        <button class="btn btn-primary" @onclick="AjouterMaintenance">Ajouter</button>
            <table class="table">
                <thead>
                    <tr>
                        <th>Kilométrage</th>
                        <th>Montant</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var maintenance in Vehicle.Maintenances)
                    {
                        <tr>
                            <td>@maintenance.CurrentKmNumber</td>
                            <td>@maintenance.WorkDescription</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@if (IsEditing)
{
    <div class="modal fade show" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Modifier les informations du véhicule</h5>
                    <button type="button" class="close" @onclick="CancelEdit">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form @onsubmit="SaveChanges">
                        <div class="form-group">
                            <label for="carModel">Modèle de voiture</label>
                            <select class="form-control" id="carModel" @bind="FormVehicle.CarModelId">
                                @if (CarModels != null)
                                {
                                    @foreach (var carModel in CarModels)
                                    {
                                        <option value="@carModel.Id">@carModel.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="numberPlate">Plaque d'immatriculation</label>
                            <input type="text" class="form-control" id="numberPlate" @bind="FormVehicle.NumberPlate" />
                        </div>
                        <div class="form-group">
                            <label for="buildYear">Année de création</label>
                            <input type="text" class="form-control" id="buildYear" @bind="FormVehicle.BuildYear" />
                        </div>
                        <div class="form-group">
                            <label for="kmNumber">Kilométrage</label>
                            <input type="text" class="form-control" id="kmNumber" @bind="FormVehicle.KmNumber" />
                        </div>
                        <div class="form-group">
                            <label for="energySource">Énergie</label>
                            <select class="form-control" id="energySource" @bind="@FormVehicle.EnergySource">
                                @foreach (var energy in Enum.GetValues(typeof(Energy)))
                                {
                                    <option value="@(energy)">@energy</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Enregistrer</button>
                        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Annuler</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (IsAdd)
{

    <div class="modal fade show" style="display: block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"> Ajouter une maintenance</h5>
                    <button type="button" class="close" @onclick="CancelAdd">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form @onsubmit="SaveChanges">
                        <div class="form-group">
                            <label for="description">Description</label>
                            <input type="text" class="form-control" id="description" @bind="FormMaintenance.WorkDescription"/>
                        </div>
                        <button type="submit" class="btn btn-primary" @onclick="Add">Enregistrer</button>
                        <button type="button" class="btn btn-secondary" @onclick="CancelAdd">Annuler</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int VehicleId { get; set; }

    private VehicleModel Vehicle { get; set; }
    private VehicleFormModel FormVehicle { get; set; }
    private MaintenanceFormModel FormMaintenance { get; set; }
    private bool IsEditing { get; set; }
    private bool IsAdd { get; set; }
    private List<CarModelModel> CarModels { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Vehicle = await HttpClient.GetFromJsonAsync<VehicleModel>($"api/Vehicle/GetWithMaintenances?vehicleId={VehicleId}");
        FormVehicle = new VehicleFormModel
            {
                Id = Vehicle.Id,
                CarModelId = Vehicle.CarModelId,
                NumberPlate = Vehicle.NumberPlate,
                BuildYear = Vehicle.BuildYear,
                KmNumber = Vehicle.KmNumber,
                EnergySource = Vehicle.EnergySource
            };

        FormMaintenance = new MaintenanceFormModel
        {
            VehicleId = Vehicle.Id
        };
        await GetCarModelsByBrand(Vehicle.CarModel.BrandId);
    }

    private async Task GetCarModelsByBrand(int brandId)
    {
        CarModels = await HttpClient.GetFromJsonAsync<List<CarModelModel>>($"api/CarModel/GetCarModelsByBrand/?brandId={brandId}");
    }

    private void ModifierClicked()
    {
        IsEditing = true;
        // Vous pouvez récupérer les modèles de voiture ici ou à un autre endroit approprié selon votre logique
        GetCarModelsByBrand(Vehicle.CarModel.Brand.Id);
    }

    private async Task SaveChanges()
    {
        var response = await HttpClient.PutAsJsonAsync($"api/Vehicle/{FormVehicle.Id}", FormVehicle);
		if (response.IsSuccessStatusCode)
		{
			IsEditing = false;
            Vehicle = await HttpClient.GetFromJsonAsync<VehicleModel>($"api/Vehicle/GetWithMaintenances?vehicleId={VehicleId}");
		}
		else
		{
			// Gérer les erreurs ici
		}
	}

    private async Task Add()
    {
        var response = await HttpClient.PostAsJsonAsync($"api/Maintenance/AddMaintenance", FormMaintenance);
        if (response.IsSuccessStatusCode)
        {
	        IsAdd = false;
	        Vehicle = await HttpClient.GetFromJsonAsync<VehicleModel>($"api/Vehicle/GetWithMaintenances?vehicleId={VehicleId}");
        }
        else
        {
	        // Gérer les erreurs ici
        }
    }

    private void AjouterMaintenance()
    {
	    IsAdd = true;
    }

	private void CancelEdit()
	{
		IsEditing = false;
	}

	private void CancelAdd()
	{
		IsAdd = false;
	}
}


