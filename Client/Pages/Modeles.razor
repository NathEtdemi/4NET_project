@page "/modeles"
@using Shared.ApiModels
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<h3>Modeles</h3>
<button class="btn btn-primary"
		@onclick="@(OpenAddPopup)">
	Ajouter
</button>

<AddVehicleForm OnAdd="OnAddVehicle" />

@if (_models == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table table-striped table-bordered text-center">
		<thead>
		<tr>
			<th>Marque</th>
			<th>Modèle</th>
			<th>Fréquence</th>
			<th>Action</th>
		</tr>
		</thead>
		<tbody>
		@foreach (var model in _models)
		{
			<tr>
				<td>@model.Brand.Name</td>
				<td>@model.Name</td>
				<td>@model.MaintenanceFrequency</td>
				<td><button class="btn btn-danger" 
				            @onclick="@(()=>OnDelete(model))">Delete</button></td>
			</tr>
		}
		</tbody>
	</table>

}

@code {
	private IList<CarModelModel>? _models;

	protected override async Task OnInitializedAsync()
	{
		_models = await HttpClient.GetFromJsonAsync<IList<CarModelModel>>("api/CarModel");
	}

	private async Task OnDelete(CarModelModel model)
	{
		var popupResult = await JSRuntime.InvokeAsync<bool>
			("confirm", $"Etes vous sur de vouloir supprimer le modele:  '{model.Name}'?");

		if (popupResult == true)
		{
			var httpStatus = await HttpClient.DeleteAsync($"api/CarModel/{model.Id}");
			if (!httpStatus.IsSuccessStatusCode)
			{
				await JSRuntime.InvokeVoidAsync("alert", httpStatus.ReasonPhrase);
			}
		}

		_models
			= await HttpClient.GetFromJsonAsync<IList<CarModelModel>>("api/CarModel");
	}

	private async Task OpenAddPopup()
	{
		
	}
}